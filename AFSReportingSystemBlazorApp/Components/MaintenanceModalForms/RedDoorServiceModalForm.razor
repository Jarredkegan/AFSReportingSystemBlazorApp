@using DataAccessLibrary;
@using DataAccessLibrary.Models.MaintenanceModels
@using DataAccessLibrary.Data.MaintenanceData.RedDoorServiceData
@using AFSReportingSystemBlazorApp.Models.MaintenanceDisplayModels

@inject IRedDoorServiceData _db
@inject NavigationManager NavigationManager

<div class="modal @ModalClass" tabindex="-1" role="dialog" style="display:@ModalDisplay">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Red Door Service</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close" @onclick="() => Close()">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <EditForm Model="@newReport" OnValidSubmit="@InsertReport">
                    <DataAnnotationsValidator />
                    <div class="form-row">
                        <div class="form-group col-md-6">
                            <label for="location">
                                Location:
                                <InputSelect id="slot" @bind-Value="newReport.Location">
                                    <option></option>
                                    <option>7</option>
                                    <option>10</option>
                                    <option>14</option>
                                    <option>X-Aisle</option>
                                    <option>OPS/Loading</option>
                                    <option>Start of 29</option>
                                    <option>End of 29</option>
                                    <option>33</option>
                                    <option>34</option>
                                    <option>A5</option>
                                </InputSelect>
                            </label>
                        </div>
                    </div>
                    <div class="form-row">
                        <div class="form-group col-xl-auto">
                            <InputTextArea rows="5" columns="20" id="comments" @bind-Value="newReport.Comments" placeholder="You can leave some info about the damage here or leave it blank" />
                        </div>
                    </div>
                    <div class="modal-footer">
                        <button type="submit" class="btn btn-primary">Submit</button>
                        <button type="button" class="btn btn-secondary" data-dismiss="modal" @onclick="() => Close()">Close</button>
                    </div>
                    <ValidationSummary />
                </EditForm>
            </div>
        </div>
    </div>
</div>


@if (ShowBackdrop)
{
    <div class="modal-backdrop fade show"></div>
}


@code {

    public Guid Guid = Guid.NewGuid();
    public string ModalDisplay = "none;";
    public string ModalClass = "";
    public bool ShowBackdrop = false;
    public bool IsOpen = false;

    private DisplayRedDoorServiceModel newReport = new DisplayRedDoorServiceModel();

    public void Open()
    {
        ModalDisplay = "block;";
        ModalClass = "Show";
        ShowBackdrop = true;
        IsOpen = true;
        StateHasChanged();
    }

    public void Close()
    {
        ModalDisplay = "none";
        ModalClass = "";
        ShowBackdrop = false;
        IsOpen = false;
        StateHasChanged();

    }

    private async Task InsertReport()
    {
        RedDoorServiceModel report = new RedDoorServiceModel
        {
            Location = newReport.Location,
            Comments = newReport.Comments,
            Date = DateTime.Now,
            Complete = false
        };

        await _db.InsertReport(report);

        newReport = new DisplayRedDoorServiceModel();

        Close();

        //force reload to refresh list
        NavigationManager.NavigateTo("/MaintenancePage/MaintenanceMainPage", true);
    }
}