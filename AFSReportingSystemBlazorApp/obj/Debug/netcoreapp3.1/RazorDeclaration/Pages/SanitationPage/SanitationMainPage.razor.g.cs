#pragma checksum "G:\AFSReportingSystemBlazorApp\AFSReportingSystemBlazorApp\Pages\SanitationPage\SanitationMainPage.razor" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "8f3b3c0acf1bbfe71e317af8aee015732dd5487d"
// <auto-generated/>
#pragma warning disable 1591
#pragma warning disable 0414
#pragma warning disable 0649
#pragma warning disable 0169

namespace AFSReportingSystemBlazorApp.Pages.SanitationPage
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Components;
#nullable restore
#line 1 "G:\AFSReportingSystemBlazorApp\AFSReportingSystemBlazorApp\_Imports.razor"
using System.Net.Http;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "G:\AFSReportingSystemBlazorApp\AFSReportingSystemBlazorApp\_Imports.razor"
using Microsoft.AspNetCore.Authorization;

#line default
#line hidden
#nullable disable
#nullable restore
#line 3 "G:\AFSReportingSystemBlazorApp\AFSReportingSystemBlazorApp\_Imports.razor"
using Microsoft.AspNetCore.Components.Authorization;

#line default
#line hidden
#nullable disable
#nullable restore
#line 4 "G:\AFSReportingSystemBlazorApp\AFSReportingSystemBlazorApp\_Imports.razor"
using Microsoft.AspNetCore.Components.Forms;

#line default
#line hidden
#nullable disable
#nullable restore
#line 5 "G:\AFSReportingSystemBlazorApp\AFSReportingSystemBlazorApp\_Imports.razor"
using Microsoft.AspNetCore.Components.Routing;

#line default
#line hidden
#nullable disable
#nullable restore
#line 6 "G:\AFSReportingSystemBlazorApp\AFSReportingSystemBlazorApp\_Imports.razor"
using Microsoft.AspNetCore.Components.Web;

#line default
#line hidden
#nullable disable
#nullable restore
#line 7 "G:\AFSReportingSystemBlazorApp\AFSReportingSystemBlazorApp\_Imports.razor"
using Microsoft.JSInterop;

#line default
#line hidden
#nullable disable
#nullable restore
#line 8 "G:\AFSReportingSystemBlazorApp\AFSReportingSystemBlazorApp\_Imports.razor"
using AFSReportingSystemBlazorApp;

#line default
#line hidden
#nullable disable
#nullable restore
#line 9 "G:\AFSReportingSystemBlazorApp\AFSReportingSystemBlazorApp\_Imports.razor"
using AFSReportingSystemBlazorApp.Shared;

#line default
#line hidden
#nullable disable
#nullable restore
#line 10 "G:\AFSReportingSystemBlazorApp\AFSReportingSystemBlazorApp\_Imports.razor"
using AFSReportingSystemBlazorApp.Components;

#line default
#line hidden
#nullable disable
#nullable restore
#line 11 "G:\AFSReportingSystemBlazorApp\AFSReportingSystemBlazorApp\_Imports.razor"
using Blazored.Toast;

#line default
#line hidden
#nullable disable
#nullable restore
#line 12 "G:\AFSReportingSystemBlazorApp\AFSReportingSystemBlazorApp\_Imports.razor"
using Blazored.Toast.Services;

#line default
#line hidden
#nullable disable
#nullable restore
#line 3 "G:\AFSReportingSystemBlazorApp\AFSReportingSystemBlazorApp\Pages\SanitationPage\SanitationMainPage.razor"
using DataAccessLibrary;

#line default
#line hidden
#nullable disable
#nullable restore
#line 4 "G:\AFSReportingSystemBlazorApp\AFSReportingSystemBlazorApp\Pages\SanitationPage\SanitationMainPage.razor"
using DataAccessLibrary.Models.SanitationModels;

#line default
#line hidden
#nullable disable
#nullable restore
#line 5 "G:\AFSReportingSystemBlazorApp\AFSReportingSystemBlazorApp\Pages\SanitationPage\SanitationMainPage.razor"
using DataAccessLibrary.Data.SanitationData.AisleSpillData;

#line default
#line hidden
#nullable disable
#nullable restore
#line 6 "G:\AFSReportingSystemBlazorApp\AFSReportingSystemBlazorApp\Pages\SanitationPage\SanitationMainPage.razor"
using DataAccessLibrary.Data.SanitationData.DockSpillData;

#line default
#line hidden
#nullable disable
#nullable restore
#line 7 "G:\AFSReportingSystemBlazorApp\AFSReportingSystemBlazorApp\Pages\SanitationPage\SanitationMainPage.razor"
using DataAccessLibrary.Data.SanitationData.CardboardRequestData;

#line default
#line hidden
#nullable disable
#nullable restore
#line 9 "G:\AFSReportingSystemBlazorApp\AFSReportingSystemBlazorApp\Pages\SanitationPage\SanitationMainPage.razor"
using AFSReportingSystemBlazorApp.Models.SanitationDisplayModels;

#line default
#line hidden
#nullable disable
#nullable restore
#line 10 "G:\AFSReportingSystemBlazorApp\AFSReportingSystemBlazorApp\Pages\SanitationPage\SanitationMainPage.razor"
using AFSReportingSystemBlazorApp.Components.SanitationModalForms;

#line default
#line hidden
#nullable disable
    [Microsoft.AspNetCore.Components.RouteAttribute("/SanitationPage/SanitationMainPage")]
    public partial class SanitationMainPage : Microsoft.AspNetCore.Components.ComponentBase
    {
        #pragma warning disable 1998
        protected override void BuildRenderTree(Microsoft.AspNetCore.Components.Rendering.RenderTreeBuilder __builder)
        {
        }
        #pragma warning restore 1998
#nullable restore
#line 211 "G:\AFSReportingSystemBlazorApp\AFSReportingSystemBlazorApp\Pages\SanitationPage\SanitationMainPage.razor"
       

    #region Modal Forms
    private AisleSpillFormModal AisleSpillForm { get; set; }
    private CardboardRequestFormModal CardboardRequestForm { get; set; }
    private DockSpillFormModal DockSpillForm { get; set; }
    #endregion

    #region Table Lists
    public List<SpillModel> spills;
    public SpillModel completedSpill;
    public List<DockSpillModel> dockSpills;
    public List<CardboardRequestModel> cardboardRequests;
    #endregion

    #region Display Models
    private DisplayAisleSpillModel newSpill = new DisplayAisleSpillModel();
    private DisplayAisleSpillModel deleteSpill = new DisplayAisleSpillModel();
    private DisplayDockSpillModel deleteDockSpill = new DisplayDockSpillModel();
    #endregion

    #region OnInitializedAsync
    protected override async Task OnInitializedAsync()
    {
        spills = await _db.GetActiveSpills();
        dockSpills = await _dbDockSpill.GetActiveSpills();
        cardboardRequests = await _dbCardboardRequest.GetActiveCardboardRequests();

    }
    #endregion

    #region Crud Methods - I feel like these belong somewhere else

    //should i move these to their components?
    /// <summary>
    /// Delete Aisle Spill from dbo.Spills
    /// </summary>
    /// <param name="Id"></param>
    /// <returns></returns>
    private async Task DeleteSpill(int Id)
    {

        bool confirmed = await JsRuntime.InvokeAsync<bool>("confirm", "Are you sure you want to delete this spill report? This action cannot be undone");

        if (confirmed)
        {

            await _db.DeleteSpill(Id);

            //used to refresh new list
            await OnInitializedAsync();

            deleteSpill = new DisplayAisleSpillModel();
        }
        else
        {
            return;
        }
    }


    //should i move these to their components?
    /// <summary>
    /// Delete Dock Spill from dbo.DockSpills
    /// </summary>
    /// <param name="Id"></param>
    /// <returns></returns>
    private async Task DeleteDockSpill(int Id)
    {

        bool confirmed = await JsRuntime.InvokeAsync<bool>("confirm", "Are you sure you want to delete this spill report? This action cannot be undone");

        if (confirmed)
        {

            await _dbDockSpill.DeleteDockSpill(Id);

            //used to refresh new list
            await OnInitializedAsync();

            deleteDockSpill = new DisplayDockSpillModel();
        }
        else
        {
            return;
        }
    }

    //should i move these to their components?
    /// <summary>
    /// Delete Cardboard Request from dbo.CardboardRequest
    /// </summary>
    /// <param name="Id"></param>
    /// <returns></returns>
    private async Task DeleteCardboardRequest(int Id)
    {

        bool confirmed = await JsRuntime.InvokeAsync<bool>("confirm", "Are you sure you want to delete this spill report? This action cannot be undone");

        if (confirmed)
        {

            await _dbCardboardRequest.DeleteCardboardRequest(Id);

            //used to refresh new list
            await OnInitializedAsync();

            deleteDockSpill = new DisplayDockSpillModel();
        }
        else
        {
            return;
        }
    }

    /// <summary>
    /// Complete Aisle Spill. Moves the spill to dbo.CompletedAisleSpills
    /// and deletes then from dbo.Spills
    /// </summary>
    /// <param name="Id"></param>
    /// <returns></returns>
    private async Task CompleteSpill(SpillModel spill)
    {
        bool confirmed = await JsRuntime.InvokeAsync<bool>("confirm", "Are you sure you want to mark this spill report as completed?");

        if (confirmed)
        {

            //Complete - Move to dbo.CompletedAisleSpills and then delete from dbo.Spills
            await _db.CompleteAisleSpill(spill);

            //used to refresh new list
            await OnInitializedAsync();

            deleteSpill = new DisplayAisleSpillModel();

            toastService.ShowSuccess("Report successfully completed", "Thank you!");

        }
        else
        {
            return;
        }

    }

    private async Task CompleteDockSpill(DockSpillModel spill)
    {
        bool confirmed = await JsRuntime.InvokeAsync<bool>("confirm", "Are you sure you want to mark this spill report as completed?");

        if (confirmed)
        {

            //Complete - Move to dbo.CompletedDockSpills and then delete from dbo.DockSpills
            await _dbDockSpill.CompleteDockSpill(spill);

            //used to refresh new list
            await OnInitializedAsync();

            deleteSpill = new DisplayAisleSpillModel();

            toastService.ShowSuccess("Report successfully completed", "Thank you!");

        }
        else
        {
            return;
        }
    }

    private async Task CompleteCardboardRequest(CardboardRequestModel request)
    {
        bool confirmed = await JsRuntime.InvokeAsync<bool>("confirm", "Are you sure you want to mark this request as completed?");

        if (confirmed)
        {

            //Complete - Move to dbo.CompletedCardboardRequests and then delete from dbo.CardboardRequest
            await _dbCardboardRequest.CompleteCardboardRequest(request);

            //used to refresh new list
            await OnInitializedAsync();

            deleteSpill = new DisplayAisleSpillModel();

            toastService.ShowSuccess("Report successfully completed", "Thank you!");

        }
        else
        {
            return;
        }

    }

    #endregion

#line default
#line hidden
#nullable disable
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private IToastService toastService { get; set; }
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private IJSRuntime JsRuntime { get; set; }
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private ICardboardRequestData _dbCardboardRequest { get; set; }
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private IDockSpillData _dbDockSpill { get; set; }
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private ISpillData _db { get; set; }
    }
}
#pragma warning restore 1591
